---
# Logic:
# There's a user common to all hosts: {{ local_user }}
# It's SSH is password protected
# Install SSH dependencies
# Create SSH directory in it's home Directory
# Cleanup any known_hosts or authorized keys Files
# Create a shorcut with alias. I.e. for GitHub SSH

- name: "ssh keypair | SSH key pairs live in the workstation"
  vars:
    ssh_dir: "/home/{{ local_user }}/.ssh"
  block:
    - name: "ssh keypair | install dependencies"
      become: true
      ansible.builtin.package:
        state: present
        name:
          - sshpass
          - openssh-client

    - name: "ssh keypair | {{ ssh_dir }} local directory"
      ansible.builtin.file:
        path: "{{ ssh_dir }}"
        state: directory
        owner: "{{ local_user }}"
        group: "{{ local_user }}"
        mode: "0700"

    - name: "ssh keypair | create key"
      ansible.builtin.user:
        name: "{{ local_user }}"
        generate_ssh_key: true
        ssh_key_file: "{{ ssh_dir }}/{{ ssh_filename }}"
        ssh_key_passphrase: "{{ local_password }}"
        ssh_key_type: "{{ ssh_encryption }}"
        ssh_key_comment: "{{ ssh_filename }} key"
        state: present
        force: false

    - name: "ssh pair | .ssh files maintenance"
      ansible.builtin.shell: sort --unique -o {{ ssh_dir }}/{{ item }}{,}
      ignore_errors: true
      loop:
        - "authorized_keys"
        - "known_hosts"

    - name: "ssh keypair | 'ssha' alias for frequent SSH logins w/o password"
      become: true
      ansible.builtin.blockinfile:
        path: "{{ ssh_dir }}/{{ item }}"
        create: true
        owner: "{{ local_user }}"
        group: "{{ local_user }}"
        mode: 0644
        block: |
          #
          # Alias to request SSH password only once per session
          alias ssha='eval $(ssh-agent -s) && ssh-add ~/.ssh/{{ ssh_filename }}'
          #
      loop:
        - ".bashrc"
        - ".zshrc"
