---
- name: "zsh & oh-my-zsh | setup"
  become: true

  vars:
    owner_path: "/home/{{ sudo_user }}"
    omz_plugins:
      - git
      - git-flow
      - docker
      - ubuntu
      - colored-man-pages
      - ansible
      - python
      - zsh-syntax-highlighting
      - zsh-autosuggestions
    zsh_dependencies:
      - zsh
      - git
      - powerline
      - fonts-powerline
    omz_path: "{{ owner_path }}/.oh-my-zsh"
    omz_custom_plugins:
      - name: zsh-syntax-highlighting
        repo: "git://github.com/zsh-users/zsh-syntax-highlighting.git"
      - name: zsh-autosuggestions
        repo: "git://github.com/zsh-users/zsh-autosuggestions.git"

  block:
    - name: "zsh & oh-my-zsh | requirements"
      package:
        name: "{{ item }}"
        state: present
      with_items: "{{ zsh_dependencies }}"
      when: ansible_os_family != "Darwin"


    - name: "zsh & oh-my-zsh | get zsh path"
      command: which zsh
      register: zsh_path
      changed_when: no


    - name: "zsh & oh-my-zsh | switch to zsh"
      user:
        name: "{{ sudo_user }}"
        shell: "{{ zsh_path.stdout }}"


    - name: "zsh & oh-my-zsh | clone oh-my-zsh repository"
      git:
        repo: "https://github.com/robbyrussell/oh-my-zsh.git"
        dest: "{{ omz_path }}"
        accept_hostkey: yes
        update: yes
        depth: 1


    - name: "zsh & oh-my-zsh | create .zshrc"
      copy:
        remote_src: yes
        src: "{{ omz_path }}/templates/zshrc.zsh-template"
        dest: "{{ owner_path }}/.zshrc"
        owner: "{{ sudo_user }}"
        group: "{{ sudo_user }}"
        mode: 0640


    - name: "zsh & oh-my-zsh | clone oh-my-zsh custom plugins"
      git:
        repo: "{{ item.repo }}"
        dest: "{{ omz_path }}/custom/plugins/{{ item.name }}"
        accept_hostkey: yes
        update: yes
        depth: 1
      with_items: "{{ omz_custom_plugins }}"


    - name: "zsh & oh-my-zsh | edit config with plugins"
      lineinfile:
        dest: "{{ owner_path }}/.zshrc"
        regexp: "^plugins="
        line: "plugins=({{ omz_plugins | join(' ') }})"


    # omz_theme comes from the hosts.yml
    - name: "zsh & oh-my-zsh | edit config with theme"
      lineinfile:
        dest: "{{ owner_path }}/.zshrc"
        regexp: "^ZSH_THEME="
        line: "ZSH_THEME='{{ omz_theme }}'"


    - name: "zsh & oh-my-zsh | edit config to enable auto update"
      lineinfile:
        dest: "{{ owner_path }}/.zshrc"
        regexp: "^DISABLE_AUTO_UPDATE="
        line: "DISABLE_AUTO_UPDATE='{{ omz_disable_auto_update }}'"

    
    - name: "zsh & oh-my-zsh | edit config custom"
      lineinfile:
        dest: "{{ owner_path }}/.zshrc"
        line: "{{ item }}"
      with_items:
        - "export EDITOR='nano'"
        - 'export SSH_KEY_PATH="~/.ssh/{{ ssh_filename }}"'
        - 'export HISTORY_IGNORE="(history|ls -ltr|ll|ls -la|lll|ls|pwd|exit|cd|cd ..)"'
        - 'setopt HIST_FIND_NO_DUPS'
        - 'export HISTFILESIZE=200000'
        - 'export HISTSIZE=100000'


    - name: "zsh & oh-my-zsh | pa10k | powerlevel10k theme"
      block:
        - name: "zsh & oh-my-zsh | p10k | download"
          git:
            repo: "https://github.com/romkatv/powerlevel10k.git"
            dest: "{{ omz_path }}/custom/themes/powerlevel10k"
            accept_hostkey: yes
            update: yes
            depth: 1

        - name: "zsh & oh-my-zsh | p10k | instant prompt"
          blockinfile:
            path: "{{ owner_path }}/.zshrc"
            insertbefore: BOF
            block: |
              # Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
              # Initialization code that may require console input (password prompts, [y/n]
              # confirmations, etc.) must go above this block; everything else may go below.
              if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
                source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
              fi

        
        - name: "zsh & oh-my-zsh | p10k | other .zshrc edits"
          blockinfile:
            dest: "{{ owner_path }}/.zshrc"
            insertafter: EOF
            block: |
              ##### POWERLEVEL CUSTOMIZATION #####
              # Font to be used
              # POWERLEVEL9K_MODE="nerdfont-complete"
              
              # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
              [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

              # Custom prompt
              POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir vcs virtualenv)
              POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator background_jobs time)

      when: omz_theme == "powerlevel10k/powerlevel10k"
              

    - name: "zsh & oh-my-zsh | .oh-my-zsh permission"
      # Prevent the cloned repository from having insecure permissions. Failing to do
      # so causes compinit() calls to fail with "command not found: compdef" errors
      # for users with insecure umasks (e.g., "002", allowing group writability).
      file:
        path: "{{ omz_path }}"
        mode: "go-w"
        owner: "{{ sudo_user }}"
        group: "{{ sudo_user }}"
        recurse: yes
