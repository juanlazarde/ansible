---
- vars:
    f2b_fail2ban_local_default_edits: |
      [DEFAULT]
      ignoreip = 127.0.0.1/8 ::1 {{ my_client_ip }}
    f2b_jail_local_sshd_edits: |
      [sshd]
      enabled = true
      port = {{ ssh_port }}
      maxretry = 3
      bantime = 600
      filter = sshd
      logpath = /var/log/auth.log
      backend = systemd
    f2b_jail_local_sshd_commented:
      - port
      - logpath
      - backend

  become: true
  block:
    - name: "fail2ban | install"
      package:
        name: fail2ban
        state: present

    - name: "fail2ban | fail2ban.conf to .local backup"
      copy:
        src: /etc/fail2ban/fail2ban.conf
        dest: /etc/fail2ban/fail2ban.local

    - name: "fail2ban | edit ignoreIP in fail2ban.local"
      lineinfile:
        path: /etc/fail2ban/fail2ban.local
        regexp: "^\\[DEFAULT\\]"
        line: "{{ f2b_fail2ban_local_default_edits }}"
        state: present

    - name: "fail2ban | edit logs in fail2ban.local"
      lineinfile:
        path: /etc/fail2ban/fail2ban.local
        regexp: "{{ item.from }}"
        line: "{{ item.to }}"
        state: present
      with_items:
        - { from: "^loglevel", to: "loglevel = INFO"}
        - { from: "^logtarget", to: "logtarget = /var/log/fail2ban.log"}

    - name: "fail2ban | jail.conf to .local backup"
      copy:
        src: /etc/fail2ban/jail.conf
        dest: /etc/fail2ban/jail.local

    - name: "fail2ban | edit comments in jail.local"
      replace:
        path: /etc/fail2ban/jail.local
        regexp: "(^\\[sshd\\][\\s\\S]*?)({{ item }})"
        replace: "\\1#{{ item }}"
      with_items: "{{ f2b_jail_local_sshd_commented }}"

    - name: "fail2ban | edit sshd in jail.local"
      lineinfile:
        path: /etc/fail2ban/jail.local
        regexp: "^\\[sshd\\]"
        line: "{{ f2b_jail_local_sshd_edits }}"
        state: present
      notify: restart fail2ban

    - name: "fail2ban | start fail2ban and ensure it starts on a fresh reboot."
      service:
        name: fail2ban
        state: started
        enabled: yes
      register: error_handler
      ignore_errors: true

    - name: "fail2ban | Handling errors"
      debug: msg="{{ error_handler.msg }}"
      when: error_handler.failed
